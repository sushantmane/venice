syntax = 'proto3';
package com.linkedin.venice.protocols;

import "google/rpc/status.proto";
import "google/rpc/error_details.proto";

option java_multiple_files = true;

service VeniceControllerGrpcService {
  // --- Fully supported on gRPC and to use the common path; except for accessPermission check ---
  rpc createStore(CreateStoreGrpcRequest) returns (CreateStoreGrpcResponse) {}
  rpc updateAclForStore(UpdateAclForStoreGrpcRequest) returns (UpdateAclForStoreGrpcResponse);
  rpc getAclForStore(GetAclForStoreGrpcRequest) returns (GetAclForStoreGrpcResponse);
  rpc deleteAclForStore(DeleteAclForStoreGrpcRequest) returns (DeleteAclForStoreGrpcResponse);
  rpc checkResourceCleanupForStoreCreation(CheckResourceCleanupForStoreCreationGrpcRequest) returns (CheckResourceCleanupForStoreCreationGrpcResponse) {}


  // Partially migrated to gRPC and but old HTTP is not updated to use the common path
  // Defined but not implemented
  rpc getStoresInCluster(GetStoresInClusterGrpcRequest) returns (GetStoresInClusterGrpcResponse) {}
  rpc queryJobStatus(QueryJobStatusGrpcRequest) returns (QueryJobStatusGrpcResponse) {}
  // RPC for getting the leader controller
  rpc getLeaderController(LeaderControllerGrpcRequest) returns (LeaderControllerGrpcResponse);
}

message ClusterStoreGrpcInfo {
  string clusterName = 1;
  string storeName = 2;
}

message CreateStoreGrpcRequest {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
  string keySchema = 2;
  string valueSchema = 3;
  optional string owner = 4;
  optional bool isSystemStore = 5;
  optional string accessPermission = 6;
}

message CreateStoreGrpcResponse {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
  string owner = 2;
}

message UpdateAclForStoreGrpcRequest {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
  string accessPermissions = 3;
}

message UpdateAclForStoreGrpcResponse {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
}

message GetAclForStoreGrpcRequest {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
}

message GetAclForStoreGrpcResponse {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
  string accessPermissions = 2;
}

message DeleteAclForStoreGrpcRequest {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
}

message DeleteAclForStoreGrpcResponse {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
}

message CheckResourceCleanupForStoreCreationGrpcRequest {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
}

message CheckResourceCleanupForStoreCreationGrpcResponse {
  ClusterStoreGrpcInfo clusterStoreInfo = 1;
}

message VeniceControllerGrpcError {
  uint32 statusCode = 1;
  string errorMessage = 2;
}

message LeaderControllerGrpcRequest {
  string clusterName = 1; // The cluster name
}

message LeaderControllerGrpcResponse {
  string clusterName = 1;        // The cluster name
  string httpUrl = 2;        // Leader controller URL
  string httpsUrl = 3;       // SSL-enabled leader controller URL
  string grpcUrl = 4;        // gRPC URL for leader controller
  string secureGrpcUrl = 5;  // Secure gRPC URL for leader controller
}

message GetStoresInClusterGrpcRequest {
  string clusterName = 1;
}

message StoreInfoGrpc {
  string storeName = 1;
  optional string owner = 2;
  int32 currentVersion = 3;
  int32 partitionCount = 4;
  map<string, int32> coloToCurrentVersion = 5;
  int32 reservedVersion = 6;
  bool enableWrites = 7;
  bool enableReads = 8;
}

message GetStoresInClusterGrpcResponse {
  repeated StoreInfoGrpc stores = 1;
}

message QueryJobStatusGrpcRequest {
  string clusterName = 1;
  string storeName = 2;
  int32 version = 3;
  string jobName = 4;
  string targetedRegions = 5;
  optional string incrementalPushVersion = 6;
}

message QueryJobStatusGrpcResponse {
  int32 version = 1;
  string status = 2;
  string statusDetails = 3;
  int64 statusUpdateTimeStamp = 4;
  repeated UnCompletedPartition uncompletedPartitions = 5;
}

// intentionally ignore extra information related fields and details
message UnCompletedPartition {
  int32 partition = 1;
  repeated UnCompletedReplicas uncompletedReplicas = 2;
}

message UnCompletedReplicas {
  string instanceId = 1;
  string executionStatus = 2;
  int64 currentOffset = 3;
  string statusDetails = 4;
}