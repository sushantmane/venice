# Auto-generated file. Do not edit manually!
#
# To alter these flows, edit:
#
#     internal/venice-test-common/build.gradle
#
# To regenerate, run:
#
#     ./gradlew generateGHCI

name: VeniceCI

on: [push, pull_request]

jobs:
  StaticAnalysis:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -Pspotallbugs clean check -x spotlessCheck -x test -x integrationTest -x jacocoTestCoverageVerification"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  UnitTestsAndCodeCoverage:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "jacocoTestCoverageVerification diffCoverage --continue"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsA:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestA"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsB:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestB"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsC:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestC"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsD:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestD"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsE:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestE"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsF:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestF"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsG:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestG"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsH:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestH"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsI:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestI"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsJ:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestJ"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsK:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestK"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsL:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestL"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsM:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestM"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsN:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestN"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsO:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestO"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsP:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestP"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsQ:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestQ"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  IntegrationTestsZ:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "--continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTestZ"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


  DummyStep:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [11]
    runs-on: ${{ matrix.os }}
    needs: [StaticAnalysis, UnitTestsAndCodeCoverage, IntegrationTestsA, IntegrationTestsB, IntegrationTestsC, IntegrationTestsD, IntegrationTestsE, IntegrationTestsF, IntegrationTestsG, IntegrationTestsH, IntegrationTestsI, IntegrationTestsJ, IntegrationTestsK, IntegrationTestsL, IntegrationTestsM, IntegrationTestsN, IntegrationTestsO, IntegrationTestsP, IntegrationTestsQ, IntegrationTestsZ]
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'microsoft'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "clean"
      - name: Package artifacts
        run:  |
          mkdir ${{ github.job }}-logs && find internal/venice-test-common/build/test-results/* -name "*.xml" -exec cp "{}" ${{ github.job }}-logs \;
          tar -zcvf ${{ github.job }}-logs.tar.gz ${{ github.job }}-logs
      - name: Upload Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-logs.tar.gz
          path: ${{ github.job }}-logs.tar.gz
          retention-days: 5


